services:
  web:
    build:
      context: .
      dockerfile: ./compose/local/fastapi/Dockerfile
    
    image: fastapi_celery_example_web

    command: /start

    volumes:
      - .:/app

    ports:
      - "8000:8000"

    env_file:
      - .env/.env-sample

    environment:
      - DATABASE_URL=postgresql://fastapi_celery:fastapi_celery@db/fastapi_celery
      - ASYNC_DATABASE_URL=postgresql+asyncpg://fastapi_celery:fastapi_celery@db/fastapi_celery

    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  db:
    image: postgres:16-alpine

    volumes:
      - postgres_data:/var/lib/postgresql/data/

    environment:
      - POSTGRES_DB=fastapi_celery
      - POSTGRES_USER=fastapi_celery
      - POSTGRES_PASSWORD=fastapi_celery

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U fastapi_celery"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s

  redis:
    image: redis:7-alpine

    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  celery_worker:
    build:
      context: .
      dockerfile: ./compose/local/fastapi/Dockerfile

    image: fastapi_celery_example_celery_worker

    command: /start-celeryworker

    volumes:
      - .:/app

    env_file:
      - .env/.env-sample

    environment:
      - DATABASE_URL=postgresql://fastapi_celery:fastapi_celery@db/fastapi_celery
      - ASYNC_DATABASE_URL=postgresql+asyncpg://fastapi_celery:fastapi_celery@db/fastapi_celery

    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy

  celery_beat:
    build:
      context: .
      dockerfile: ./compose/local/fastapi/Dockerfile

    image: fastapi_celery_example_celery_beat

    command: /start-celerybeat

    volumes:
      - .:/app

    env_file:
      - .env/.env-sample

    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy

  flower:
    build:
      context: .
      dockerfile: ./compose/local/fastapi/Dockerfile

    image: fastapi_celery_example_flower

    command: /start-flower

    volumes:
      - .:/app

    env_file:
      - .env/.env-sample

    ports:
      - "5555:5555"

    environment:
      - DATABASE_URL=postgresql://fastapi_celery:fastapi_celery@db/fastapi_celery
      - ASYNC_DATABASE_URL=postgresql+asyncpg://fastapi_celery:fastapi_celery@db/fastapi_celery

    depends_on:
      celery_worker:
        condition: service_started
      redis:
        condition: service_healthy

volumes:
  postgres_data:
